version: '3.8'

services:
  # PostgreSQL Database (Internal Only)
  db:
    image: postgres:15-alpine
    container_name: pbj-postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - /mnt/elitecloud/pbj-db:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"  # Only accessible locally!
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pbj-network
    security_opt:
      - no-new-privileges:true

  # Backend API Server (Internal Only)
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: pbj-backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: 5000
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRY: ${JWT_EXPIRY:-7d}
      FRONTEND_URL: ${FRONTEND_URL}
      API_RATE_LIMIT: ${API_RATE_LIMIT:-100}
      CORS_ORIGIN: ${FRONTEND_URL}
    restart: unless-stopped
    volumes:
      - ../backend:/app
      - /app/node_modules
    networks:
      - pbj-network
      - npm_default
    expose:
      - "5000"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Web App
  web:
    build: .
    container_name: pbj-frontend
    restart: unless-stopped
    depends_on:
      - backend
    volumes:
      - /mnt/elitecloud/pbj-storage:/app/storage
      - /mnt/elitecloud/pbj-logs:/app/logs
    environment:
      NODE_ENV: ${NODE_ENV}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
      STORAGE_PATH: /app/storage
    networks:
      - pbj-network
      - npm_default
    expose:
      - "80"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  pbj-network:
    driver: bridge
  npm_default:
    external: true
    name: nginx-proxy-manager_default